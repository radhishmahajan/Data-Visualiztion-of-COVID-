<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='WHO-COVID-19-global-data' inline='true' name='federated.04j2ruo05r2wsy121mwe11emwekw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='WHO-COVID-19-global-data' name='textscan.0d7cqm21yc89za1bcmjwq0sbjujc'>
            <connection class='textscan' directory='C:/Users/radhi/Downloads' filename='WHO-COVID-19-global-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0d7cqm21yc89za1bcmjwq0sbjujc' name='WHO-COVID-19-global-data.csv' table='[WHO-COVID-19-global-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='integer' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='integer' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0d7cqm21yc89za1bcmjwq0sbjujc' name='WHO-COVID-19-global-data.csv' table='[WHO-COVID-19-global-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='integer' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='integer' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='MORTALITY RATE' datatype='real' default-format='p0.00%' name='[Calculation_749286447757303808]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([New_deaths])/SUM([New_cases])' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_cases]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_deaths]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='WHO-COVID-19-global-data.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/radhi/OneDrive/Desktop/data structure/WHO-COVID-19-global-data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2024 05:51:02 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='WHO-COVID-19-global-data' increment-value='%null%' refresh-type='create' rows-inserted='234867' timestamp-start='2024-09-09 05:50:59.384' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date_reported</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date_reported]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date_reported</remote-alias>
              <ordinal>0</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4890</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_code</remote-alias>
              <ordinal>1</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>347</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>347</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHO_region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WHO_region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WHO_region</remote-alias>
              <ordinal>3</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[New_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9714</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cumulative_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cumulative_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cumulative_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49187</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[New_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1615</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cumulative_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cumulative_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cumulative_deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17489</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;TÃ¼rkiye&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#be193a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#c21a3b'>
              <bucket>&quot;The United Kingdom&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#c41d3b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#c71e3b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ce243c'>
              <bucket>&quot;Sint Eustatius&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d72d3e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Saint BarthÃ©lemy&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Saba&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;RÃ©union&quot;</bucket>
            </map>
            <map to='#db333f'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Pitcairn Islands&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e03941'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e13941'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Northern Mariana Islands (Commonwealth of the)&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e64344'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e74445'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e84646'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e84846'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e94946'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ec524a'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ed544a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f15f4e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f26552'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#f26653'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f36654'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f36755'>
              <bucket>&quot;Kosovo[1]&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f46e5a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#f5725f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f67661'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f67762'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#f67763'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f67863'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f77d68'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f8826c'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f98770'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fa8e78'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fb957f'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
            </map>
            <map to='#fb9884'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>&quot;CÃ´te dâ€™Ivoire&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fc9e8a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fca08d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fda595'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fda696'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#fda897'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>&quot;Bonaire&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#fead9f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#feb1a2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#feb7a9'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#febaad'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='WHO-COVID-19-global-data.csv' id='WHO-COVID-19-global-data.csv_3A57B741119E4DEBB1E5A1BBB66B4B4E'>
            <properties context=''>
              <relation connection='textscan.0d7cqm21yc89za1bcmjwq0sbjujc' name='WHO-COVID-19-global-data.csv' table='[WHO-COVID-19-global-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='integer' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='integer' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_79EC604050B74F3FB7936F4631FCEEC1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>CASES AND DEATH</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.04j2ruo05r2wsy121mwe11emwekw' />
          </datasources>
          <datasource-dependencies datasource='federated.04j2ruo05r2wsy121mwe11emwekw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_cases]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Month-Trunc' name='[tmn:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_79EC604050B74F3FB7936F4631FCEEC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.04j2ruo05r2wsy121mwe11emwekw].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>MONTH:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04j2ruo05r2wsy121mwe11emwekw].[tmn:Date_reported:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>New cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.04j2ruo05r2wsy121mwe11emwekw].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>MONTH:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04j2ruo05r2wsy121mwe11emwekw].[tmn:Date_reported:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>New cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04j2ruo05r2wsy121mwe11emwekw].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>MONTH:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04j2ruo05r2wsy121mwe11emwekw].[tmn:Date_reported:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>New cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk] + [federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_deaths:qk])</rows>
        <cols>[federated.04j2ruo05r2wsy121mwe11emwekw].[tmn:Date_reported:qk]</cols>
      </table>
      <simple-id uuid='{95CBAFCA-58BC-4A40-914A-007A0111FDE1}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>TOP 15 COUNTRIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.04j2ruo05r2wsy121mwe11emwekw' />
          </datasources>
          <datasource-dependencies datasource='federated.04j2ruo05r2wsy121mwe11emwekw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New cases' datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04j2ruo05r2wsy121mwe11emwekw].[none:Country:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([New_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Anguilla&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia (Plurinational State of)&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bonaire&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cabo Verde&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cook Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;CÃ´te dâ€™Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;CuraÃ§ao&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic People&apos;s Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic of the Congo&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Falkland Islands (Malvinas)&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Guiana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guadeloupe&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guernsey&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Holy See&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jersey&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo[1]&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lao People&apos;s Democratic Republic&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Martinique&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mayotte&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia (Federated States of)&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montserrat&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niue&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Northern Mariana Islands (Commonwealth of the)&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;occupied Palestinian territory, including east Jerusalem&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Other&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pitcairn Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Republic of Moldova&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;RÃ©union&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saba&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint BarthÃ©lemy&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Helena&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Lucia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Martin&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Pierre and Miquelon&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sint Eustatius&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sint Maarten&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;The United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tokelau&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;TÃ¼rkiye&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Republic of Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States Virgin Islands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela (Bolivarian Republic of)&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Viet Nam&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Wallis and Futuna&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04j2ruo05r2wsy121mwe11emwekw].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04j2ruo05r2wsy121mwe11emwekw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.04j2ruo05r2wsy121mwe11emwekw].[none:Country:nk]</rows>
        <cols>[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]</cols>
      </table>
      <simple-id uuid='{EDAA6169-810B-40E3-9CA1-A51931B12FCB}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>WORLD ANALYSIS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.04j2ruo05r2wsy121mwe11emwekw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04j2ruo05r2wsy121mwe11emwekw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New cases' datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_79EC604050B74F3FB7936F4631FCEEC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04j2ruo05r2wsy121mwe11emwekw].[none:Country:nk]' />
              <size column='[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0386741161346436' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04j2ruo05r2wsy121mwe11emwekw].[Latitude (generated)]</rows>
        <cols>[federated.04j2ruo05r2wsy121mwe11emwekw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{77B66300-0D98-4A68-A0F1-481320494CAA}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>CONFIRMED CASES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.04j2ruo05r2wsy121mwe11emwekw' />
          </datasources>
          <datasource-dependencies datasource='federated.04j2ruo05r2wsy121mwe11emwekw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New cases' datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_79EC604050B74F3FB7936F4631FCEEC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'>&lt;</run>
                <run bold='true' fontsize='15'>[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_cases:qk]</run>
                <run bold='true' fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{11A5D19C-125E-4879-9AF4-8903F2DD2D15}' />
    </worksheet>
    <worksheet name='Sheet 4 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>CONFIRMED DEATHS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.04j2ruo05r2wsy121mwe11emwekw' />
          </datasources>
          <datasource-dependencies datasource='federated.04j2ruo05r2wsy121mwe11emwekw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_79EC604050B74F3FB7936F4631FCEEC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;</run>
                <run bold='true' fontsize='16'>[federated.04j2ruo05r2wsy121mwe11emwekw].[sum:New_deaths:qk]</run>
                <run bold='true' fontsize='16'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A49FA340-5326-4F1E-A40E-D2D375F33860}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>MORTALITY RATE</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.04j2ruo05r2wsy121mwe11emwekw' />
          </datasources>
          <datasource-dependencies datasource='federated.04j2ruo05r2wsy121mwe11emwekw'>
            <column caption='MORTALITY RATE' datatype='real' default-format='p0.00%' name='[Calculation_749286447757303808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([New_deaths])/SUM([New_cases])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New cases' datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_cases]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0,,.00M;-#,##0,,.00M' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_749286447757303808]' derivation='User' name='[usr:Calculation_749286447757303808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_79EC604050B74F3FB7936F4631FCEEC1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04j2ruo05r2wsy121mwe11emwekw].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04j2ruo05r2wsy121mwe11emwekw].[usr:Calculation_749286447757303808:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;</run>
                <run bold='true' fontsize='16'>[federated.04j2ruo05r2wsy121mwe11emwekw].[usr:Calculation_749286447757303808:qk]</run>
                <run bold='true' fontsize='16'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0BE8D30E-9411-4597-A5B1-B7600D057098}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='87000' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='12111'>
            <zone h='87000' id='5' type-v2='layout-basic' w='89000' x='500' y='12111'>
              <zone h='87000' id='3' name='Sheet 1' w='44500' x='500' y='12111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43498' id='9' name='Sheet 2' w='44500' x='45000' y='55613'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43502' id='10' name='Sheet 3' w='44500' x='45000' y='12111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='87000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='12111'>
              <zone h='8000' id='8' name='Sheet 1' pane-specification-id='1' param='[federated.04j2ruo05r2wsy121mwe11emwekw].[:Measure Names]' type-v2='color' w='10000' x='89500' y='12111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='11222' id='11' name='Sheet 4' w='18500' x='15000' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11222' id='12' name='Sheet 4 (2)' w='33000' x='66500' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11222' id='13' name='Sheet 6' w='33000' x='33500' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11222' id='14' is-scaled='1' param='C:/Users/radhi/OneDrive/Desktop/download.jpg' type-v2='bitmap' w='14500' x='500' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='17' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='93' h='11222' id='14' is-fixed='true' is-scaled='1' param='C:/Users/radhi/OneDrive/Desktop/download.jpg' type-v2='bitmap' w='14500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='11222' id='11' is-fixed='true' name='Sheet 4' w='18500' x='15000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='11222' id='13' is-fixed='true' name='Sheet 6' w='33000' x='33500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='11222' id='12' is-fixed='true' name='Sheet 4 (2)' w='33000' x='66500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87000' id='3' is-fixed='true' name='Sheet 1' w='44500' x='500' y='12111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='8' name='Sheet 1' pane-specification-id='1' param='[federated.04j2ruo05r2wsy121mwe11emwekw].[:Measure Names]' type-v2='color' w='10000' x='89500' y='12111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43502' id='10' is-fixed='true' name='Sheet 3' w='44500' x='45000' y='12111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43498' id='9' is-fixed='true' name='Sheet 2' w='44500' x='45000' y='55613'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{598CF9D3-1449-44EE-B437-5DE3CB6F0356}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.04j2ruo05r2wsy121mwe11emwekw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04j2ruo05r2wsy121mwe11emwekw].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{190276AE-9078-4E2A-9CED-99E51452B891}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.04j2ruo05r2wsy121mwe11emwekw].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E3821D1-B0A6-4093-A050-EB422560911C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04j2ruo05r2wsy121mwe11emwekw].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{43401208-E7B2-435D-902E-FF0D737C0270}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B8D2406A-1894-4D54-9781-E89448155534}' />
    </window>
    <window class='worksheet' name='Sheet 4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{760E05AD-8812-462D-85D2-8D2BF77035D4}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{A120EBA5-3013-459B-85B5-E272D4421C3C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{6D2F1A1F-138B-413E-8986-E506D5E4BF6C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      NDT/H1fDGBthBNt6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADPElEQVR4nO3Yv4vQdRzH8fddRj8QveogKohqDBr6E4KWCKTBgwiTppoK55aWaK6trYYc
      khClCI0CUaIcEougtCAEC/qBdUSWJ/LtnxAO7vl4/AWv5cn7w2dlWZZlIGp1uwfAdhIAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZC2a7sHwM12dfP3OXLkg/l7a2bfxoHZu1yZw+8fm1v3
      3DsHntuYvy5/P0c/+nRuX7tvVpZlWbZ7MNxM77z1xjz21Avz+MP3zPXllnn3zdfniQOH5s+v
      P55Lq4/MxTMfzsuvvjYXzxx1Adh5frz086x+cWK+/OS/eXLf/vnlyr/z0P1rs37t0Tl98rt5
      8IH1OffVudl95x4BsPOs7b1rnt7//Oz67Zt5+8Tp2X3b6mz+c302//h11u5en4Mbz87W1rW5
      cPakJxA7z0/fnp3Dxz+buXFjnjn40tyx+cO8d/zUzKzMi68cmsvnT83n5y/M1a0VAdDmG5Q0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANL+B/X+amT9VTROAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAC80lEQVR4nO3WvWrQBxSH4aPxqzi5uHXwC6eCq4urnRy8jSiOXoC3oCK4uAtCCyoOtiJu
      iQ4dW0qJaIcOOigxoObfQRC8AAnkfZ71t5zlhbNnWZZlIGrvTh8AO0kApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBEDavp0+AL6nZfvzPHn0y/zx56v58fSZufjzua/b04d3BcDu9tf643nx
      enuuXL40W5ub32zr6y+8QOxuz9fW5uDerbl14+bcf/xsPn3e/rod2L8iAHa3w4d/mFM/nZ3V
      S6vzcu23+ffd1pdhWWb16jUBsLudO39hfr93Zx48+HXerByZo4dmbt++Mx8/vZ9b12/MnmVZ
      lp0+Er6nzXdvZ+PVf3Ps5Mk5tDLz9z8bc+zE8fn44b0AaPMCkSYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0v4HGwlRss/NDuUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACyElEQVR4nO3WvWqUQRSA4dkoGH8qCysbYwpvIHdka+192IimUW8hZSBYplKwEPwpFNaw
      kViEiIgk+WxsgrUu7Ps83cxpTvMyM5umaRoQtbbsBWCZBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmAlTadn423r/fHo6cv/prNP7wZl5ewE/w3X96/Gjt7++Pdp4OLg+nXePzkuReA
      1Xb73tZ4+OD+uLF+6cL92fFifF+/JQCa1q5eH9PPHwJgtS0+fxy7ey/H0dfDsbu7N45PTsb2
      9rNxeuXm2Nq4NmbTNE3LXhL+leNvh2O+OPpzmo2Nzc1xMJ+PO3c3xuz8VAC0+QKRJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSfgP0CEYZrHRBmwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
